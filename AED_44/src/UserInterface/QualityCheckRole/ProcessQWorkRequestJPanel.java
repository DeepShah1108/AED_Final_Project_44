/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.QualityCheckRole;

import Business.WorkQueue.FoodRequirementRequest;
import Business.WorkQueue.Products;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Team Void
 */
public class ProcessQWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessQWorkRequestJPanel
     */
    private JPanel userProcessContainer;
    private FoodRequirementRequest request;

    public ProcessQWorkRequestJPanel(JPanel userProcessContainer, FoodRequirementRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        groupButton();
        populateTable();
        resultJTextField.setEnabled(false);
        resultJTextField.setText("AWAITING RESULT ");
        finalProgressBar.setEnabled(false);
        chemicalProgressBar.setEnabled(false);
        nutritionProgressBar.setEnabled(false);
        spoilageProgressBar.setEnabled(false);
        microbioProgressBar.setEnabled(false);
        qualityCheckReport.setEditable(false);
    }

    public void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();

        model.setRowCount(0);

        ArrayList<Products> productList = ((FoodRequirementRequest) request).getProductList();
        if (productList != null) {
            for (Products p : productList) {
                Object row[] = new Object[3];
                row[0] = p;
                row[1] = p.getProductName();
                row[2] = p.getQuantity();
                model.addRow(row);

            }
        }
    }

    private void groupButton() {

        ButtonGroup bg1 = new ButtonGroup();
        bg1.add(radioQ1Yes);
        bg1.add(radioQ1No);

        ButtonGroup bg2 = new ButtonGroup();
        bg2.add(radioQ2Yes);
        bg2.add(radioQ2No);

        ButtonGroup bg3 = new ButtonGroup();
        bg3.add(radioQ3Yes);
        bg3.add(radioQ3No);

        ButtonGroup bg4 = new ButtonGroup();
        bg4.add(radioQ4Yes);
        bg4.add(radioQ4No);

        ButtonGroup bg5 = new ButtonGroup();
        bg5.add(radioQ5Yes);
        bg5.add(radioQ5No);

        ButtonGroup bg6 = new ButtonGroup();
        bg6.add(radioQ6Yes);
        bg6.add(radioQ6No);

        ButtonGroup bg7 = new ButtonGroup();
        bg7.add(radioQ7Yes);
        bg7.add(radioQ7No);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        radioQ1Yes = new javax.swing.JRadioButton();
        radioQ1No = new javax.swing.JRadioButton();
        radioQ3Yes = new javax.swing.JRadioButton();
        radioQ2Yes = new javax.swing.JRadioButton();
        radioQ3No = new javax.swing.JRadioButton();
        radioQ2No = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        radioQ4No = new javax.swing.JRadioButton();
        radioQ4Yes = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        radioQ5Yes = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        radioQ5No = new javax.swing.JRadioButton();
        radioQ6Yes = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        radioQ6No = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        radioQ7Yes = new javax.swing.JRadioButton();
        radioQ7No = new javax.swing.JRadioButton();
        resultJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        finalProgressBar = new javax.swing.JProgressBar();
        chemicalProgressBar = new javax.swing.JProgressBar();
        nutritionProgressBar = new javax.swing.JProgressBar();
        microbioProgressBar = new javax.swing.JProgressBar();
        spoilageProgressBar = new javax.swing.JProgressBar();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        resetBtn = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        qualityCheckReport = new javax.swing.JTextArea();
        btnGenerateReport = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 255, 255));

        backJButton.setBackground(new java.awt.Color(0, 0, 102));
        backJButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Result");

        tblProducts.setForeground(new java.awt.Color(153, 255, 255));
        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Brand", "Drug", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblProducts);

        radioQ1Yes.setText("YES");
        radioQ1Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ1YesActionPerformed(evt);
            }
        });

        radioQ1No.setText("NO");
        radioQ1No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ1NoActionPerformed(evt);
            }
        });

        radioQ3Yes.setText("YES");
        radioQ3Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ3YesActionPerformed(evt);
            }
        });

        radioQ2Yes.setText("YES");
        radioQ2Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ2YesActionPerformed(evt);
            }
        });

        radioQ3No.setText("NO");
        radioQ3No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ3NoActionPerformed(evt);
            }
        });

        radioQ2No.setText("NO");
        radioQ2No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ2NoActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Is the drug FDA Approved");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setText("Are the Drugs following Government guidlines");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setText("Does the Medicine achieve Target condition and treatments");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Are the Drugs within the expiry date? ");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Does the drug contain Vitamin A , Carnosine");

        radioQ4No.setText("NO");
        radioQ4No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ4NoActionPerformed(evt);
            }
        });

        radioQ4Yes.setText("YES");
        radioQ4Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ4YesActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Is the druf free of animal-Testing and human  clinical testing");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        radioQ5Yes.setText("YES");
        radioQ5Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ5YesActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        radioQ5No.setText("NO");
        radioQ5No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ5NoActionPerformed(evt);
            }
        });

        radioQ6Yes.setText("YES");
        radioQ6Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ6YesActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        radioQ6No.setText("NO");
        radioQ6No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ6NoActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel22.setText("Is the Drug within asssigned dosage limit");

        radioQ7Yes.setText("YES");
        radioQ7Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ7YesActionPerformed(evt);
            }
        });

        radioQ7No.setText("NO");
        radioQ7No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioQ7NoActionPerformed(evt);
            }
        });

        resultJTextField.setBackground(new java.awt.Color(51, 255, 0));
        resultJTextField.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        resultJTextField.setForeground(new java.awt.Color(102, 204, 0));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("FINAL RESULT");

        finalProgressBar.setBackground(new java.awt.Color(102, 255, 102));
        finalProgressBar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        finalProgressBar.setForeground(new java.awt.Color(102, 204, 0));
        finalProgressBar.setStringPainted(true);

        chemicalProgressBar.setOpaque(true);
        chemicalProgressBar.setStringPainted(true);

        nutritionProgressBar.setStringPainted(true);

        microbioProgressBar.setStringPainted(true);

        spoilageProgressBar.setStringPainted(true);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("GUIDELINES TEST  ");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("CHEMICAL TEST  ");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("EXPIRY TEST");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("MICROBIOLOGICAL TEST ");

        resetBtn.setBackground(new java.awt.Color(0, 0, 102));
        resetBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        resetBtn.setForeground(new java.awt.Color(255, 255, 255));
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        submitJButton.setBackground(new java.awt.Color(0, 0, 102));
        submitJButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("Submit Result");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        qualityCheckReport.setColumns(20);
        qualityCheckReport.setRows(5);
        jScrollPane1.setViewportView(qualityCheckReport);

        btnGenerateReport.setBackground(new java.awt.Color(0, 0, 102));
        btnGenerateReport.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnGenerateReport.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerateReport.setText("Generate Summarized Report");
        btnGenerateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateReportActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(0, 0, 102));
        btnSave.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Download Report");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnGenerateReport))))
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chemicalProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nutritionProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(363, 363, 363))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel9))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(finalProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(spoilageProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(microbioProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(radioQ7Yes)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(radioQ2Yes))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel12)
                                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel16))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(radioQ4Yes, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(radioQ6Yes, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(radioQ5Yes, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(radioQ3Yes, javax.swing.GroupLayout.Alignment.TRAILING)))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel2)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(radioQ1Yes))))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radioQ7No)
                                            .addComponent(radioQ5No)
                                            .addComponent(radioQ6No)
                                            .addComponent(radioQ1No)
                                            .addComponent(radioQ2No)
                                            .addComponent(radioQ3No)
                                            .addComponent(radioQ4No))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetBtn)
                            .addComponent(btnSave))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(jLabel2)
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addComponent(jLabel16)
                                                .addGap(6, 6, 6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(7, 7, 7)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(radioQ3Yes)
                                                        .addComponent(radioQ3No))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel17)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel18))))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(radioQ1No)
                                            .addComponent(radioQ1Yes))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(radioQ2Yes)
                                            .addComponent(radioQ2No))
                                        .addGap(60, 60, 60)))
                                .addGap(javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radioQ4Yes)
                                    .addComponent(radioQ4No))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel22)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel11)
                                            .addComponent(radioQ5Yes)
                                            .addComponent(radioQ5No))
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel12)
                                            .addComponent(radioQ6Yes)
                                            .addComponent(radioQ6No))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel19)
                                        .addGap(69, 69, 69))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnGenerateReport))
                                .addGap(273, 273, 273)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel13)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radioQ7Yes)
                                .addComponent(radioQ7No)))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(chemicalProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nutritionProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(spoilageProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)
                                .addComponent(microbioProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finalProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        QualityCheckWorkAreaJPanel dwjp = (QualityCheckWorkAreaJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void radioQ1YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ1YesActionPerformed
        // TODO add your handling code here:

        int value = 15;
        int internalvalue = 10;

        finalProgressBar.setEnabled(true);
        chemicalProgressBar.setEnabled(true);
        nutritionProgressBar.setEnabled(true);
        spoilageProgressBar.setEnabled(true);
        microbioProgressBar.setEnabled(true);

        finalProgressBar.setValue(value);
        chemicalProgressBar.setValue(internalvalue);
        nutritionProgressBar.setValue(internalvalue);
        finalProgressBar.setValue(internalvalue);

    }//GEN-LAST:event_radioQ1YesActionPerformed

    private void radioQ3YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ3YesActionPerformed
        // TODO add your handling code here:

        int currentvalue = finalProgressBar.getValue();
        int newvalue = currentvalue + 15;
        finalProgressBar.setValue(newvalue);

        int internalvalue = 100;
        microbioProgressBar.setValue(internalvalue);
    }//GEN-LAST:event_radioQ3YesActionPerformed

    private void radioQ2YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ2YesActionPerformed
        // TODO add your handling code here:

        int currentvalue = finalProgressBar.getValue();
        int newvalue = currentvalue + 15;
        finalProgressBar.setValue(newvalue);
        int internalvalue = 50;
        chemicalProgressBar.setValue(internalvalue);
        nutritionProgressBar.setValue(internalvalue);

    }//GEN-LAST:event_radioQ2YesActionPerformed

    private void radioQ3NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ3NoActionPerformed
        // TODO add your handling code here:
        int value = 0;
        //   int internalvalue=10;

        // finalProgressBar.setEnabled(true);
        finalProgressBar.setBackground(Color.red);
        chemicalProgressBar.setBackground(Color.red);
        nutritionProgressBar.setBackground(Color.red);
        spoilageProgressBar.setBackground(Color.red);
        microbioProgressBar.setBackground(Color.red);

        finalProgressBar.setValue(value);
        chemicalProgressBar.setValue(value);
        nutritionProgressBar.setValue(value);
        microbioProgressBar.setValue(value);
        spoilageProgressBar.setValue(value);

        // int currentvalue=finalProgressBar.getValue();
        // int newvalue=currentvalue-15;
        // finalProgressBar.setValue(newvalue);

    }//GEN-LAST:event_radioQ3NoActionPerformed

    private void radioQ2NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ2NoActionPerformed
        // TODO add your handling code here:

        int value = 0;
        //   int internalvalue=10;

        finalProgressBar.setBackground(Color.red);
        chemicalProgressBar.setBackground(Color.red);
        nutritionProgressBar.setBackground(Color.red);
        spoilageProgressBar.setBackground(Color.red);
        microbioProgressBar.setBackground(Color.red);

        finalProgressBar.setValue(value);
        chemicalProgressBar.setValue(value);
        nutritionProgressBar.setValue(value);
        microbioProgressBar.setValue(value);
        spoilageProgressBar.setValue(value);

        // int currentvalue=finalProgressBar.getValue();
        // int newvalue=currentvalue-15;
        // finalProgressBar.setValue(newvalue);

    }//GEN-LAST:event_radioQ2NoActionPerformed

    private void radioQ4NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ4NoActionPerformed
        // TODO add your handling code here:
        int value = 0;
        //   int internalvalue=10;

        // finalProgressBar.setEnabled(true);
        finalProgressBar.setBackground(Color.red);
        chemicalProgressBar.setBackground(Color.red);
        nutritionProgressBar.setBackground(Color.red);
        spoilageProgressBar.setBackground(Color.red);
        microbioProgressBar.setBackground(Color.red);

        finalProgressBar.setValue(value);
        chemicalProgressBar.setValue(value);
        nutritionProgressBar.setValue(value);
        microbioProgressBar.setValue(value);
        spoilageProgressBar.setValue(value);

        // int currentvalue=finalProgressBar.getValue();
        // int newvalue=currentvalue-15;
        // finalProgressBar.setValue(newvalue);

    }//GEN-LAST:event_radioQ4NoActionPerformed

    private void radioQ4YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ4YesActionPerformed
        // TODO add your handling code here:

        int currentvalue = finalProgressBar.getValue();
        int newvalue = currentvalue + 15;
        finalProgressBar.setValue(newvalue);
        int internalvalue = 70;
        chemicalProgressBar.setValue(internalvalue);
    }//GEN-LAST:event_radioQ4YesActionPerformed

    private void radioQ5YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ5YesActionPerformed
        // TODO add your handling code here:

        int currentvalue = finalProgressBar.getValue();
        int newvalue = currentvalue + 15;
        finalProgressBar.setValue(newvalue);

        int internalvalue = 100;
        //  int newinternalvalue=internalvalue-15;
        chemicalProgressBar.setValue(internalvalue);
        // nutritionProgressBar.setValue(internalvalue);

    }//GEN-LAST:event_radioQ5YesActionPerformed

    private void radioQ5NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ5NoActionPerformed
        // TODO add your handling code here:
        int value = 0;
        //   int internalvalue=10;

        // finalProgressBar.setEnabled(true);
        finalProgressBar.setBackground(Color.red);
        chemicalProgressBar.setBackground(Color.red);
        nutritionProgressBar.setBackground(Color.red);
        spoilageProgressBar.setBackground(Color.red);
        microbioProgressBar.setBackground(Color.red);

        finalProgressBar.setValue(value);
        chemicalProgressBar.setValue(value);
        nutritionProgressBar.setValue(value);
        microbioProgressBar.setValue(value);
        spoilageProgressBar.setValue(value);

        // int currentvalue=finalProgressBar.getValue();
        // int newvalue=currentvalue-15;
        // finalProgressBar.setValue(newvalue);

    }//GEN-LAST:event_radioQ5NoActionPerformed

    private void radioQ6YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ6YesActionPerformed
        // TODO add your handling code here:

        int currentvalue = finalProgressBar.getValue();
        int newvalue = currentvalue + 15;
        finalProgressBar.setValue(newvalue);
        int internalvalue = 100;
        spoilageProgressBar.setValue(internalvalue);

    }//GEN-LAST:event_radioQ6YesActionPerformed

    private void radioQ6NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ6NoActionPerformed
        // TODO add your handling code here:
        int value = 0;
        //   int internalvalue=10;

        // finalProgressBar.setEnabled(true);
        finalProgressBar.setBackground(Color.red);
        chemicalProgressBar.setBackground(Color.red);
        nutritionProgressBar.setBackground(Color.red);
        spoilageProgressBar.setBackground(Color.red);
        microbioProgressBar.setBackground(Color.red);

        finalProgressBar.setValue(value);
        chemicalProgressBar.setValue(value);
        nutritionProgressBar.setValue(value);
        microbioProgressBar.setValue(value);
        spoilageProgressBar.setValue(value);

        // int currentvalue=finalProgressBar.getValue();
        // int newvalue=currentvalue-15;
        // finalProgressBar.setValue(newvalue);

    }//GEN-LAST:event_radioQ6NoActionPerformed

    private void radioQ7YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ7YesActionPerformed
        // TODO add your handling code here:

        if (radioQ1Yes.isSelected() && radioQ2Yes.isSelected() && radioQ3Yes.isSelected() && radioQ4Yes.isSelected()
                && radioQ5Yes.isSelected() && radioQ6Yes.isSelected() && radioQ7Yes.isSelected()) {
            resultJTextField.setText("QUALIFIED");

        }
        int currentvalue = finalProgressBar.getValue();
        int newvalue = currentvalue + 15;
        finalProgressBar.setValue(newvalue);
        finalProgressBar.setStringPainted(true);
        finalProgressBar.setForeground(Color.white);
        finalProgressBar.setBackground(Color.green);
        finalProgressBar.setString("100% QUALIFIED ");
        int internalvalue = 100;
        nutritionProgressBar.setValue(internalvalue);

    }//GEN-LAST:event_radioQ7YesActionPerformed

    private void radioQ7NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ7NoActionPerformed
        // TODO add your handling code here:
        int value = 0;
        //   int internalvalue=10;
        resultJTextField.setText("NOT QUALIFIED ");
        // finalProgressBar.setEnabled(true);
        finalProgressBar.setBackground(Color.red);
        chemicalProgressBar.setBackground(Color.red);
        nutritionProgressBar.setBackground(Color.red);
        spoilageProgressBar.setBackground(Color.red);
        microbioProgressBar.setBackground(Color.red);

        finalProgressBar.setValue(value);
        chemicalProgressBar.setValue(value);
        nutritionProgressBar.setValue(value);
        microbioProgressBar.setValue(value);
        spoilageProgressBar.setValue(value);

        // int currentvalue=finalProgressBar.getValue();
        // int newvalue=currentvalue-15;
        // finalProgressBar.setValue(newvalue);

    }//GEN-LAST:event_radioQ7NoActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        int value = 0;
        //
        //         radioQ1Yes.setSelected(false);
        //         radioQ1No.setSelected(false);
        //         radioQ2Yes.setSelected(false);
        //         radioQ2No.setSelected(false);
        //         radioQ3Yes.setSelected(false);
        //         radioQ3No.setSelected(false);
        //         radioQ4Yes.setSelected(false);
        //         radioQ4No.setSelected(false);
        //         radioQ5Yes.setSelected(false);
        //         radioQ5No.setSelected(false);
        //         radioQ6Yes.setSelected(false);
        //         radioQ6No.setSelected(false);
        //         radioQ7Yes.setSelected(false);
        //         radioQ7No.setSelected(false);

        ButtonGroup bg1 = new ButtonGroup();
        bg1.add(radioQ1Yes);
        bg1.add(radioQ1No);

        ButtonGroup bg2 = new ButtonGroup();
        bg2.add(radioQ2Yes);
        bg2.add(radioQ2No);

        ButtonGroup bg3 = new ButtonGroup();
        bg3.add(radioQ3Yes);
        bg3.add(radioQ3No);

        ButtonGroup bg4 = new ButtonGroup();
        bg4.add(radioQ4Yes);
        bg4.add(radioQ4No);

        ButtonGroup bg5 = new ButtonGroup();
        bg5.add(radioQ5Yes);
        bg5.add(radioQ5No);

        ButtonGroup bg6 = new ButtonGroup();
        bg6.add(radioQ6Yes);
        bg6.add(radioQ6No);

        ButtonGroup bg7 = new ButtonGroup();
        bg7.add(radioQ7Yes);
        bg7.add(radioQ7No);

        bg1.clearSelection();
        bg2.clearSelection();
        bg3.clearSelection();
        bg4.clearSelection();
        bg5.clearSelection();
        bg6.clearSelection();
        bg7.clearSelection();

        finalProgressBar.setValue(value);
        chemicalProgressBar.setValue(value);
        nutritionProgressBar.setValue(value);
        microbioProgressBar.setValue(value);
        spoilageProgressBar.setValue(value);
        
        btnGenerateReport.setEnabled(true);
        resultJTextField.setText("AWAITING RESULT");
        qualityCheckReport.setText("");
    }//GEN-LAST:event_resetBtnActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        request.setRequestResult(resultJTextField.getText());
        request.setStatus("Completed");
        JOptionPane.showMessageDialog(null, "Food Request Approved for Quality Check!");
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void btnGenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateReportActionPerformed

        //************************ Start of radio button values
        btnGenerateReport.setEnabled(false);
        String radioText1 = null;
        String radioText2 = null;
        String radioText3 = null;
        String radioText4 = null;
        String radioText5 = null;
        String radioText6 = null;
        String radioText7 = null;

        if (radioQ1Yes.isSelected()) {
            radioText1 = "Yes";
        }
        if (radioQ1No.isSelected()) {
            radioText1 = "No";
        }

        if (radioQ2Yes.isSelected()) {
            radioText2 = "Yes";
        }
        if (radioQ2No.isSelected()) {
            radioText2 = "No";
        }

        if (radioQ3Yes.isSelected()) {
            radioText3 = "Yes";
        }
        if (radioQ3No.isSelected()) {
            radioText3 = "No";
        }

        if (radioQ4Yes.isSelected()) {
            radioText4 = "Yes";
        }
        if (radioQ4No.isSelected()) {
            radioText4 = "No";
        }

        if (radioQ5Yes.isSelected()) {
            radioText5 = "Yes";
        }
        if (radioQ5No.isSelected()) {
            radioText5 = "No";
        }

        if (radioQ6Yes.isSelected()) {
            radioText6 = "Yes";
        }
        if (radioQ6No.isSelected()) {
            radioText6 = "No";
        }

        if (radioQ7Yes.isSelected()) {
            radioText7 = "Yes";
        }
        if (radioQ7No.isSelected()) {
            radioText7 = "No";
        }
        //************************ End of radio button values 

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
   LocalDateTime now = LocalDateTime.now();  

qualityCheckReport.append("\t\t QUALITY CHECK REPORT \n"
+ "\n Date of Quality Check : " + now +"\tResult :"+ resultJTextField.getText()
+ "\n------------------------------------------------------------------------------------------------------------------------------"
+ "\n1) Are the products within the expiry date? : " + radioText1 + "\n"
+ "\n2) Are all products free from Food Adulteration? :" + radioText2 + "\n"
+ "\n3) Are all products free from Pathogens? :" + radioText3 + "\n"
+ "\n4) Are all products free from contaminants? :" + radioText4 + "\n"
+ "\n5) Are all products free from Process Generated chemical? :" + radioText5 + "\n"
+ "\n6) Are all products free from Spoilage Indicator? :" + radioText6 + "\n"
+ "\n7) Is the Fat profiles Protein and carbohydrate content"+"\n" +"Cholesterol Sugar profile Dietary fiber Vitamins, minerals, electrolytes appropriate ?" + radioText7 + "\n"
+ "--------------------------------------------------------------------------------------------------------------------------------"
);
qualityCheckReport.setFont(new Font("Serif", Font.ITALIC, 16));

    btnGenerateReport.setEnabled(false);
    

    }//GEN-LAST:event_btnGenerateReportActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        //*********************** Printing logic 
        try {

            Boolean ppt = qualityCheckReport.print();
            if (ppt) {
                JOptionPane.showMessageDialog(null, "Done");

            } else {
                JOptionPane.showMessageDialog(null, "Printing");
            }
        } catch (PrinterException ex) {
            Logger.getLogger(ProcessQWorkRequestJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void radioQ1NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioQ1NoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioQ1NoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnGenerateReport;
    private javax.swing.JButton btnSave;
    private javax.swing.JProgressBar chemicalProgressBar;
    private javax.swing.JProgressBar finalProgressBar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JProgressBar microbioProgressBar;
    private javax.swing.JProgressBar nutritionProgressBar;
    private javax.swing.JTextArea qualityCheckReport;
    private javax.swing.JRadioButton radioQ1No;
    private javax.swing.JRadioButton radioQ1Yes;
    private javax.swing.JRadioButton radioQ2No;
    private javax.swing.JRadioButton radioQ2Yes;
    private javax.swing.JRadioButton radioQ3No;
    private javax.swing.JRadioButton radioQ3Yes;
    private javax.swing.JRadioButton radioQ4No;
    private javax.swing.JRadioButton radioQ4Yes;
    private javax.swing.JRadioButton radioQ5No;
    private javax.swing.JRadioButton radioQ5Yes;
    private javax.swing.JRadioButton radioQ6No;
    private javax.swing.JRadioButton radioQ6Yes;
    private javax.swing.JRadioButton radioQ7No;
    private javax.swing.JRadioButton radioQ7Yes;
    private javax.swing.JButton resetBtn;
    private javax.swing.JTextField resultJTextField;
    private javax.swing.JProgressBar spoilageProgressBar;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTable tblProducts;
    // End of variables declaration//GEN-END:variables
}
